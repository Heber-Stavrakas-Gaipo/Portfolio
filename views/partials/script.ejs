<script>
  const url = "https://api.github.com/users/Heber-Stavrakas-Gaipo";
  const e = (error) => console.error(error);

  // function displayProjectNames() {
  //   axios
  //     .get(`${url}/repos`)
  //     .then((response) => {
  //       const projects = response.data;

  //       // Ordenar os projetos pelo ID
  //       projects.sort((a, b) => a.id - b.id);

  //       projects.forEach((project, index) => {
  //         const projectNameElement = document.querySelector(
  //           `#project${index + 1}Name`
  //         );
  //         if (projectNameElement) {
  //           projectNameElement.textContent = project.name;
  //         }
  //       });
  //     })
  //     .catch(e);
  // }

  // displayProjectNames();

  // function projectLinks() {
  //   axios
  //     .get(`${url}/repos`)
  //     .then((response) => {
  //       const projects = response.data;

  //       // Ordenar os projetos pelo ID
  //       projects.sort((a, b) => a.id - b.id);

  //       projects.forEach((project, index) => {
  //         const projectLinkElement = document.querySelector(
  //           `#project${index + 1}Link`
  //         );
  //         if (projectLinkElement) {
  //           projectLinkElement.setAttribute("href", project.html_url);
  //         }
  //       });
  //     })
  //     .catch(e);
  // }

  // projectLinks();

  // function getDescriptions() {
  //   axios
  //     .get(`${url}/repos`)
  //     .then((response) => {
  //       const projects = response.data;

  //       // Ordenar os projetos pelo ID
  //       projects.sort((a, b) => a.id - b.id);

  //       projects.forEach((project, index) => {
  //         const projectDscElement = document.querySelector(
  //           `#project${index + 1}Dsc`
  //         );
  //         if (projectDscElement) {
  //           projectDscElement.textContent = project.description;
  //         }
  //       });
  //     })
  //     .catch(e);
  // }
  // getDescriptions();

  // function getGithubUserName() {
  //   axios
  //     .get(url)
  //     .then((response) => {
  //       githubUserName.textContent = response.data.login;
  //     })
  //     .catch(e);
  // }
  // getGithubUserName();

  // function getStars() {
  //   axios
  //     .get(`${url}/repos`)
  //     .then((response) => {
  //       const projects = response.data;

  //       // Ordenar os projetos pelo ID
  //       projects.sort((a, b) => a.id - b.id);

  //       projects.forEach((project, index) => {
  //         const projectStarElement = document.querySelector(
  //           `#project${index + 1}Stars`
  //         );
  //         if (projectStarElement) {
  //           projectStarElement.textContent = project.stargazers_count;
  //         }
  //       });
  //     })
  //     .catch(e);
  // }
  // getStars();

  // function getForks() {
  //   axios
  //     .get(`${url}/repos`)
  //     .then((response) => {
  //       const projects = response.data;

  //       // Ordenar os projetos pelo ID
  //       projects.sort((a, b) => a.id - b.id);

  //       projects.forEach((project, index) => {
  //         const projectForkElement = document.querySelector(
  //           `#project${index + 1}Forks`
  //         );
  //         if (projectForkElement) {
  //           projectForkElement.textContent = project.forks;
  //         }
  //       });
  //     })
  //     .catch(e);
  // }
  // getForks();

  // function getLanguage() {
  //   axios
  //     .get(`${url}/repos`)
  //     .then((response) => {
  //       const projects = response.data;

  //       // Ordenar os projetos pelo ID
  //       projects.sort((a, b) => a.id - b.id);

  //       projects.forEach((project, index) => {
  //         const projectLanguageElement = document.querySelector(
  //           `#project${index + 1}Language`
  //         );

  //         if (projectLanguageElement) {
  //           projectLanguageElement.textContent = project.language;
  //           projectLanguageElement.classList.add(
  //             `language-${project.language.toLowerCase()}`
  //           );
  //         }
  //       });
  //     })
  //     .catch(e);
  // }
  // getLanguage();

  const sons = document.querySelectorAll(".img");
  sons.forEach((son) => {
    const parent = son.parentElement;
    parent.style.backgroundColor = "#8257e5";
  });

  // function to set a given theme/color-scheme
  function setTheme(themeName) {
    localStorage.setItem("theme", themeName);
    document.documentElement.className = themeName;
  }

  const iaForDevsCertificate = document.querySelector("#ia-para-devs");
  const nlwAiCertificate = document.querySelector("#nlw-ai");

  // function to toggle between light and dark theme
  function toggleTheme() {
    const switchButton = document.querySelector("#switch");
    if (localStorage.getItem("theme") === "theme-light") {
      setTheme("theme-default");
      switchButton.setAttribute("title", "Alterar para tema claro");
    } else {
      setTheme("theme-light");
      switchButton.setAttribute("title", "Alterar para tema escuro");
    }
  }

  // Immediately invoked function to set the theme on initial load
  document.addEventListener("DOMContentLoaded", function () {
    if (localStorage.getItem("theme") === "theme-default") {
      setTheme("theme-default");
      document.getElementById("slider").checked = false;
    } else {
      setTheme("theme-light");
      document.getElementById("slider").checked = true;
    }

    // Add event listener to the theme switcher button
    document.querySelector("#switch").addEventListener("click", toggleTheme);
  });

  document.querySelector("body").setAttribute("class", "hide-scrollbar");

  window.addEventListener("load", function () {
    // When the page is fully loaded, hide the loading screen with a smooth transition
    const loadingScreen = document.getElementById("loadingScreen");
    loadingScreen.style.opacity = 0; // We set the opacity to 0 (completely transparent)

    // Wait for a short interval before removing the loading screen
    setTimeout(function () {
      loadingScreen.style.display = "none";
    }, 0); // The transition has a duration of 0.3 seconds (300 milliseconds)

    // Remove the class that hides the scrollbar
    document.body.classList.remove("hide-scrollbar");
  });

  const scrollButton = document.querySelector(".scroll-to-top");

  // Show the arrow when the user scrolls the page
  window.addEventListener("scroll", () => {
    if (window.pageYOffset > 200) {
      scrollButton.classList.add("active");
      scrollButton.setAttribute("title", "Back to top");
    } else {
      scrollButton.classList.remove("active");
    }
  });

  // Smooth scroll to the top when the arrow is clicked
  scrollButton.addEventListener("click", () => {
    window.scrollTo({
      top: 0,
      behavior: "smooth",
    });
  });

  // Get the <a> element for each link in the header
  const homePageLink = document.getElementById("home");
  const aboutLink = document.getElementById("about");
  const certificatesLink = document.getElementById("certificates");

  // Get the current page name from the URL (assuming your URL is something like "http://yoursite.com/homepage.html")
  const arrayURL = window.location.href.split("/");
  const [currentPage] = arrayURL.slice(3, 4);

  // Function to update classes based on the current page
  function updateHeaderStyle() {
    // First, remove all active classes
    homePageLink.classList.remove("active");
    aboutLink.classList.remove("active");
    certificatesLink.classList.remove("active");

    // Add the active class only to the corresponding page
    if (currentPage === "") {
      homePageLink.classList.add("active");
    } else if (currentPage === "about") {
      aboutLink.classList.add("active");
    } else if (currentPage === "certificates") {
      certificatesLink.classList.add("active");
    }
  }

  // Call the function initially to set up the style based on the current page
  updateHeaderStyle();
</script>
