<script>
  const url = "https://api.github.com/users/Heber-Stavrakas-Gaipo";
  const e = (error) => console.error(error);

  function displayProjectNames() {
    axios
      .get(`${url}/repos`)
      .then((response) => {
        const projects = response.data;
        projects.forEach((project, index) => {
          const projectNameElement = document.querySelector(
            `#project${index + 1}Name`
          );
          if (projectNameElement) {
            projectNameElement.textContent = project.name;
          }
        });
      })
      .catch(e);
  }

  displayProjectNames();
  
  function projectLinks() {
    axios
      .get(`${url}/repos`)
      .then((response) => {
        const projects = response.data;
        projects.forEach((project, index) => {
          const projectLinkElement = document.querySelector(
            `#project${index + 1}Link`
          );
          if (projectLinkElement) {
            projectLinkElement.setAttribute("href", project.html_url);
          }
        });
      })
      .catch(e);
  }

  projectLinks();

  function getDescriptions() {
    axios
      .get(`${url}/repos`)
      .then((response) => {
        const projects = response.data;
        projects.forEach((project, index) => {
          const projectDscElement = document.querySelector(
            `#project${index + 1}Dsc`
          );
          if (projectDscElement) {
            projectDscElement.textContent = project.description;
          }
        });
      })
      .catch(e);
  }
  getDescriptions();

  function getGithubUserName() {
    axios
      .get(url)
      .then((response) => {
        githubUserName.textContent = response.data.login;
      })
      .catch(e);
  }
  getGithubUserName();

  function getStars() {
    axios
      .get(`${url}/repos`)
      .then((response) => {
        const projects = response.data;
        projects.forEach((project, index) => {
          const projectStarElement = document.querySelector(
            `#project${index + 1}Stars`
          );
          if (projectStarElement) {
            projectStarElement.textContent = project.stargazers_count;
          }
        });
      })
      .catch(e);
  }
  getStars();

  function getForks() {
    axios
      .get(`${url}/repos`)
      .then((response) => {
        const projects = response.data;
        projects.forEach((project, index) => {
          const projectForkElement = document.querySelector(
            `#project${index + 1}Forks`
          );
          if (projectForkElement) {
            projectForkElement.textContent = project.forks;
          }
        });
      })
      .catch(e);
  }
  getForks();

  function getLanguage() {
    axios
      .get(`${url}/repos`)
      .then((response) => {
        const projects = response.data;
        projects.forEach((project, index) => {
          const projectLanguageElement = document.querySelector(
            `#project${index + 1}Language`
          );

          if (projectLanguageElement) {
            projectLanguageElement.textContent = project.language;
            projectLanguageElement.classList.add(
              `language-${project.language.toLowerCase()}`
            );
          }
        });
      })
      .catch(e);
  }
  getLanguage();

  // function to set a given theme/color-scheme
  function setTheme(themeName) {
    localStorage.setItem("theme", themeName);
    document.documentElement.className = themeName;
  }

  // function to toggle between light and dark theme
  function toggleTheme() {
    if (localStorage.getItem("theme") === "theme-light") {
      document
        .querySelector("#switch")
        .setAttribute("title", "Alterar para tema claro");
      setTheme("theme-default");
    } else {
      document
        .querySelector("#switch")
        .setAttribute("title", "Alterar para tema escuro");
      setTheme("theme-light");
    }
  }

  // Immediately invoked function to set the theme on initial load
  document.addEventListener("DOMContentLoaded", function () {
    if (localStorage.getItem("theme") === "theme-default") {
      setTheme("theme-default");
      document.getElementById("slider").checked = false;
    } else {
      setTheme("theme-light");
      document.getElementById("slider").checked = true;
    }

    // Add event listener to the theme switcher button
    document.querySelector("#switch").addEventListener("click", toggleTheme);
  });

  document.querySelector("body").setAttribute("class", "hide-scrollbar");

  window.addEventListener("load", function () {
    // Quando a página estiver completamente carregada, oculta a tela de loading com transição suave
    const loadingScreen = document.getElementById("loadingScreen");
    loadingScreen.style.opacity = 0; // Definimos a opacidade para 0 (completamente transparente)

    // Aguarda um pequeno intervalo antes de remover a tela de loading
    setTimeout(function () {
      loadingScreen.style.display = "none";
    }, 0); // A transição tem duração de 0.3 segundos (300 milissegundos)

    // Remove a classe que oculta a scrollbar
    document.body.classList.remove("hide-scrollbar");
  });
</script>
