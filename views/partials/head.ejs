<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Portf√≥lio</title>
    <link rel="stylesheet" href="/style/style.css" type="text/css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Merriweather+Sans&display=swap" rel="stylesheet">
    <link rel="icon" href="icons/myfavicon.png" type="image/png">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <!-- <script src="/js/main.js"></script> -->
    <script>
        const url = "https://api.github.com/users/Heber-Stavrakas-Gaipo"
        const e = error => console.error(error)

        function getProjectName() {
            axios.get(`${url}/repos`)
                .then(response => {
                    project1Name.textContent = response.data[1].name
                })
                .catch(e)
        }
        getProjectName()

        function getDescription() {
            axios.get(`${url}/repos`)
                .then(response => {
                    project1Dsc.textContent = response.data[1].description
                })
                .catch(e)
        }
        getDescription()

        function getGithubUserName() {
            axios.get(url)
                .then(response => {
                    githubUserName.textContent = response.data.login
                })
                .catch(e)
        }
        getGithubUserName()

        function getStars() {
            axios.get(`${url}/repos`)
                .then(response => {
                    project1Stars.textContent = response.data[1].stargazers_count
                })
                .catch(e)
        }
        getStars()

        function getForks() {
            axios.get(`${url}/repos`)
                .then(response => {
                    project1Forks.textContent = response.data[1].forks
                })
                .catch(e)
        }
        getForks()

        function getLanguage() {
            axios.get(`${url}/repos`)
                .then(response => {
                    project1Language.textContent = response.data[1].language
                })
                .catch(e)
        }
        getLanguage()

        // function to set a given theme/color-scheme
        function setTheme(themeName) {
            localStorage.setItem('theme', themeName);
            document.documentElement.className = themeName;
        }

        // function to toggle between light and dark theme
        function toggleTheme() {
            if (localStorage.getItem('theme') === 'theme-light') {
                setTheme('theme-default');
            } else {
                setTheme('theme-light');
            }
        }

        // Immediately invoked function to set the theme on initial load
        (function () {
            if (localStorage.getItem('theme') === 'theme-dark') {
                setTheme('theme-light');
                document.getElementById('slider').checked = false;
            } else {
                setTheme('theme-default');
                document.getElementById('slider').checked = true;
            }
        })();
    </script>
</head>